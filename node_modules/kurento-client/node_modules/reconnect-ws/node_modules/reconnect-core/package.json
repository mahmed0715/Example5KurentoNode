{
  "name": "reconnect-core",
  "description": "Generic stream reconnection module.",
  "version": "1.0.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/juliangruber/reconnect-core.git"
  },
  "homepage": "https://github.com/juliangruber/reconnect-core",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "backoff": "~2.3.0"
  },
  "devDependencies": {
    "tape": "~1.0.4"
  },
  "keywords": [
    "reconnect",
    "core"
  ],
  "author": {
    "name": "Julian Gruber",
    "email": "mail@juliangruber.com",
    "url": "http://juliangruber.com"
  },
  "license": "MIT",
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/8..latest",
      "firefox/17..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "# reconnect-core\r\n\r\nGeneric stream reconnection module.\r\n\r\n[![build status](https://secure.travis-ci.org/juliangruber/reconnect-core.png)](http://travis-ci.org/juliangruber/reconnect-core)\r\n\r\n[![testling badge](https://ci.testling.com/juliangruber/reconnect-core.png)](https://ci.testling.com/juliangruber/reconnect-core)\r\n\r\n## Usage\r\n\r\nCreate a `reconnect` instance that keeps reconnecting over tcp:\r\n\r\n```js\r\nvar inject = require('reconnect-core');\r\nvar net = require('net');\r\n\r\n// build you own reconnect module\r\nvar reconnect = inject(function () {\r\n  // arguments are what you passed to .connect\r\n  // this is the reconnect instance\r\n  return net.connect.apply(null, arguments);\r\n});\r\n\r\nvar re = reconnect({}, function (stream) {\r\n  // stream = the stream you should consume \r\n})\r\n.on('connect', function (con) {\r\n  // con = underlying connection  \r\n})\r\n.on('reconnect', function (n, delay) {\r\n  // n = current number of reconnect  \r\n  // delay = delay used before reconnect\r\n})\r\n.on('disconnect', function (err) {\r\n  // err = possible error  \r\n})\r\n.on('error', function (err) {\r\n  // never forget\r\n})\r\n.connect(port)\r\n\r\n// disconnect\r\nre.disconnect();\r\n\r\n// ...or prevent reconnecting\r\nre.reconnect = false;\r\n```\r\n\r\n## Available implementations\r\n\r\n* tcp: [reconnect-net](https://github.com/juliangruber/reconnect-net)\r\n* engine.io/websockets: [reconnect-engine](https://github.com/juliangruber/reconnect-engine)\r\n\r\n## Installation\r\n\r\nWith [npm](https://npmjs.org) do:\r\n\r\n```bash\r\nnpm install reconnect-core\r\n```\r\n\r\n## Kudos\r\n\r\nThis has been refactored out of [dominictarr](https://github.com/dominictarr)'s\r\n[reconnect](https://github.com/dominictarr/reconnect) module.\r\n\r\n## License\r\n\r\n(MIT)\r\n\r\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\nof the Software, and to permit persons to whom the Software is furnished to do\r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/juliangruber/reconnect-core/issues"
  },
  "_id": "reconnect-core@1.0.0",
  "dist": {
    "shasum": "f1ebb5f4d74f4ded3e9c1bb9bcecce4d58c07be1"
  },
  "_resolved": "git://github.com/KurentoForks/reconnect-core#921d43e91578abb2fb2613f585c010c1939cf734",
  "_from": "git://github.com/KurentoForks/reconnect-core",
  "_fromGithub": true
}
